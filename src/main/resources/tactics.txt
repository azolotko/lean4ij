-- from https://proofassistants.stackexchange.com/questions/3986/is-there-a-complete-index-of-lean-4-tactics
-- extract by rg 'syntax.+\"([^"]+)"...\s+\[([^\]]+)\]' tactics.txt -r '$1 $2'
#adaptation_note «tactic#adaptation_note_»
#check Mathlib.Tactic.«tactic#check__»
#find Mathlib.Tactic.Find.«tactic#find_»
( Lean.Parser.Tactic.paren
<;> Batteries.Tactic.seq_focus
<;> Lean.Parser.Tactic.«tactic_<;>_»
_ Batteries.Tactic.tactic_
abel Mathlib.Tactic.Abel.abel_term
abel Mathlib.Tactic.Abel.abel
abel! Mathlib.Tactic.Abel.abel!_term
abel! Mathlib.Tactic.Abel.tacticAbel!
abel1 Mathlib.Tactic.Abel.abel1
abel1! Mathlib.Tactic.Abel.abel1!
abel_nf Mathlib.Tactic.Abel.abelNF
abel_nf! Mathlib.Tactic.Abel.tacticAbel_nf!__
absurd Batteries.Tactic.tacticAbsurd_
ac_change Mathlib.Tactic.acChange
ac_rfl Lean.Parser.Tactic.acRfl
admit Lean.Parser.Tactic.tacticAdmit
aesop Aesop.Frontend.Parser.aesopTactic
aesop? Aesop.Frontend.Parser.aesopTactic?
aesop_cat CategoryTheory.aesop_cat
aesop_cat? CategoryTheory.aesop_cat?
aesop_cat_nonterminal CategoryTheory.aesop_cat_nonterminal
aesop_graph aesop_graph
aesop_graph? aesop_graph?
aesop_graph_nonterminal aesop_graph_nonterminal
aesop_mat Matroid.aesop_mat
aesop_unfold Aesop.tacticAesop_unfold_
aesop_unfold Aesop.tacticAesop_unfold_At_
all_goals Lean.Parser.Tactic.allGoals
and_intros Lean.Parser.Tactic.tacticAnd_intros
any_goals Lean.Parser.Tactic.anyGoals
apply Mathlib.Tactic.tacticApply_At_
apply Lean.Parser.Tactic.apply
apply Mathlib.Tactic.applyWith
apply? Lean.Parser.Tactic.apply?
apply_assumption Lean.Parser.Tactic.applyAssumption
apply_ext_theorem Lean.Elab.Tactic.Ext.applyExtTheorem
apply_fun Mathlib.Tactic.applyFun
apply_gmonoid_gnpowRec_succ_tac GradedMonoid.tacticApply_gmonoid_gnpowRec_succ_tac
apply_gmonoid_gnpowRec_zero_tac GradedMonoid.tacticApply_gmonoid_gnpowRec_zero_tac
apply_mod_cast Lean.Parser.Tactic.tacticApply_mod_cast_
apply_rfl Lean.Parser.Tactic.applyRfl
apply_rules Lean.Parser.Tactic.applyRules
arith_mult ArithmeticFunction.arith_mult
arith_mult? ArithmeticFunction.arith_mult?
array_get_dec Array.tacticArray_get_dec
array_mem_dec Array.tacticArray_mem_dec
assumption Lean.Parser.Tactic.assumption
assumption' Mathlib.Tactic.tacticAssumption'
assumption_mod_cast Lean.Parser.Tactic.tacticAssumption_mod_cast
aux_group₁ Mathlib.Tactic.Group.aux_group₁
aux_group₂ Mathlib.Tactic.Group.aux_group₂
bddDefault tacticBddDefault
beta_reduce Mathlib.Tactic.betaReduceStx
bicategory_coherence Mathlib.Tactic.BicategoryCoherence.tacticBicategory_coherence
bitwise_assoc_tac Nat.tacticBitwise_assoc_tac
borelize Mathlib.Tactic.Borelize.tacticBorelize___
bound «tacticBound[_»]
bv_omega Lean.Parser.Tactic.tacticBv_omega
by_cases «tacticBy_cases_:_»
by_contra Batteries.Tactic.byContra
by_contra! byContra!
calc Lean.calcTactic
cancel_denoms tacticCancel_denoms_
cancel_denoms cancelDenoms
case Batteries.Tactic.casePatt
case Lean.Parser.Tactic.case
case' Lean.Parser.Tactic.case'
case' Batteries.Tactic.casePatt'
cases Lean.Parser.Tactic.cases
cases' Mathlib.Tactic.cases'
cases_type Mathlib.Tactic.casesType
cases_type! Mathlib.Tactic.casesType!
casesm Mathlib.Tactic.casesM
cc Mathlib.Tactic.cc
cfc_cont_tac cfcContTac
cfc_tac cfcTac
cfc_zero_tac cfcZeroTac
change Lean.Parser.Tactic.change
change Lean.Parser.Tactic.changeWith
change? change?
checkpoint Lean.Parser.Tactic.checkpoint
choose Mathlib.Tactic.Choose.choose
choose! Mathlib.Tactic.Choose.tacticChoose!___Using_
classical Batteries.Tactic.tacticClassical_
classical! Batteries.Tactic.tacticClassical!
clean Mathlib.Tactic.tacticClean_
clear Lean.Elab.Tactic.clearExcept
clear Lean.Parser.Tactic.clear
clear! Mathlib.Tactic.clear!
clear_ Mathlib.Tactic.clear_
clear_aux_decl Mathlib.Tactic.clearAuxDecl
clear_value Mathlib.Tactic.clearValue
coherence Mathlib.Tactic.Coherence.coherence
compareOfLessAndEq_rfl tacticCompareOfLessAndEq_rfl
compute_degree Mathlib.Tactic.ComputeDegree.computeDegree
compute_degree! Mathlib.Tactic.ComputeDegree.tacticCompute_degree!
congr Lean.Parser.Tactic.congr
congr Batteries.Tactic.congrConfigWith
congr Batteries.Tactic.congrConfig
congr! Congr!.congr!
congrm Mathlib.Tactic.congrM
congrm? tacticCongrm?
constructor Lean.Parser.Tactic.constructor
constructorm Mathlib.Tactic.constructorM
continuity tacticContinuity
continuity? tacticContinuity?
contradiction Lean.Parser.Tactic.contradiction
contrapose Mathlib.Tactic.Contrapose.contrapose
contrapose! Mathlib.Tactic.Contrapose.contrapose!
conv Lean.Parser.Tactic.Conv.conv
conv' Lean.Parser.Tactic.Conv.convTactic
conv? tacticConv?
conv_lhs Mathlib.Tactic.Conv.convLHS
conv_rhs Mathlib.Tactic.Conv.convRHS
convert Mathlib.Tactic.convert
convert_to Mathlib.Tactic.convertTo
count_heartbeats Mathlib.CountHeartbeats.tacticCount_heartbeats_
count_heartbeats! Mathlib.CountHeartbeats.tacticCount_heartbeats!_In__
dbg_trace Lean.Parser.Tactic.dbgTrace
decide Lean.Parser.Tactic.decide
decreasing_tactic tacticDecreasing_tactic
decreasing_trivial tacticDecreasing_trivial
decreasing_trivial_pre_omega tacticDecreasing_trivial_pre_omega
decreasing_with tacticDecreasing_with_
delta Lean.Parser.Tactic.delta
discrete_cases CategoryTheory.Discrete.tacticDiscrete_cases
done Lean.Parser.Tactic.done
dsimp Lean.Parser.Tactic.dsimp
dsimp! Lean.Parser.Tactic.dsimpAutoUnfold
dsimp? Lean.Parser.Tactic.dsimpTrace
dsimp?! Lean.Parser.Tactic.tacticDsimp?!_
eapply Batteries.Tactic.tacticEapply_
econstructor tacticEconstructor
elementwise Tactic.Elementwise.tacticElementwise___
elementwise! Tactic.Elementwise.tacticElementwise!___
else Lean.Parser.Tactic.tacDepIfThenElse
else Lean.Parser.Tactic.tacIfThenElse
eq_refl Lean.Parser.Tactic.eqRefl
erw Lean.Parser.Tactic.tacticErw__
eta_expand Mathlib.Tactic.etaExpandStx
eta_reduce Mathlib.Tactic.etaReduceStx
eta_struct Mathlib.Tactic.etaStructStx
exact Lean.Parser.Tactic.exact
exact? Lean.Parser.Tactic.exact?
exact_mod_cast Lean.Parser.Tactic.tacticExact_mod_cast_
exacts Batteries.Tactic.exacts
exfalso Lean.Parser.Tactic.tacticExfalso
exists Lean.Parser.Tactic.«tacticExists_,,»
existsi Mathlib.Tactic.«tacticExistsi_,,»
ext Lean.Elab.Tactic.Ext.ext
ext1 Lean.Elab.Tactic.Ext.tacticExt1___
extract_goal Mathlib.Tactic.ExtractGoal.extractGoal
extract_lets Mathlib.extractLets
fail Lean.Parser.Tactic.fail
fail_if_no_progress Mathlib.Tactic.failIfNoProgress
fail_if_success Lean.Parser.Tactic.failIfSuccess
false_or_by_contra Lean.Parser.Tactic.falseOrByContra
fapply Batteries.Tactic.tacticFapply_
fconstructor tacticFconstructor
field_simp Mathlib.Tactic.FieldSimp.fieldSimp
field_simp_discharge Mathlib.Tactic.FieldSimp.tacticField_simp_discharge
filter_upwards Mathlib.Tactic.filterUpwards
fin_cases Lean.Elab.Tactic.finCases
find Mathlib.Tactic.Find.tacticFind
first Lean.Parser.Tactic.first
focus Lean.Parser.Tactic.focus
forward Aesop.Frontend.tacticForward___
forward? Aesop.Frontend.tacticForward?___
frac_tac RatFunc.tacticFrac_tac
fun_prop Mathlib.Meta.FunProp.funPropTacStx
funext tacticFunext___
gcongr Mathlib.Tactic.GCongr.tacticGcongr__With__
gcongr? tacticGcongr?
gcongr_discharger Mathlib.Tactic.GCongr.tacticGcongr_discharger
generalize Lean.Parser.Tactic.generalize
generalize' «tacticGeneralize'_:_=_»
generalize_proofs Mathlib.Tactic.generalizeProofsElab
get_elem_tactic tacticGet_elem_tactic
get_elem_tactic_trivial tacticGet_elem_tactic_trivial
ghost_calc WittVector.Tactic.ghostCalc
ghost_fun_tac WittVector.«tacticGhost_fun_tac_,_»
ghost_simp WittVector.Tactic.ghostSimp
group Mathlib.Tactic.Group.group
guard_expr Lean.Parser.Tactic.guardExpr
guard_goal_nums guardGoalNums
guard_hyp Lean.Parser.Tactic.guardHyp
guard_hyp_nums guardHypNums
guard_target Lean.Parser.Tactic.guardTarget
have Lean.Parser.Tactic.tacticHave_
have Mathlib.Tactic.tacticHave_
have!? Mathlib.Tactic.Propose.«tacticHave!?:_Using__»
have' Lean.Parser.Tactic.tacticHave'_
have' Lean.Parser.Tactic.«tacticHave'_:=_»
have? Mathlib.Tactic.Propose.propose'
have?! Mathlib.Tactic.Propose.«tacticHave?!:_Using__»
haveI Lean.Parser.Tactic.tacticHaveI_
hint Mathlib.Tactic.Hint.hintStx
induction Lean.Parser.Tactic.induction
induction' Mathlib.Tactic.induction'
infer_instance Lean.Parser.Tactic.tacticInfer_instance
infer_param Mathlib.Tactic.inferOptParam
inhabit Lean.Elab.Tactic.inhabit
init_ring WittVector.initRing
injection Lean.Parser.Tactic.injection
injections Lean.Parser.Tactic.injections
interval_cases Mathlib.Tactic.intervalCases
intro Batteries.Tactic.introDot
intro Lean.Parser.Tactic.intro
intro Lean.Parser.Tactic.introMatch
intros Lean.Parser.Tactic.intros
introv Mathlib.Tactic.introv
isBoundedDefault Filter.tacticIsBoundedDefault
itauto Mathlib.Tactic.ITauto.itauto
itauto! Mathlib.Tactic.ITauto.itauto!
iterate Lean.Parser.Tactic.tacticIterate____
left Lean.Parser.Tactic.left
let Lean.Parser.Tactic.letrec
let Mathlib.Tactic.tacticLet_
let Lean.Parser.Tactic.tacticLet_
let' Lean.Parser.Tactic.tacticLet'_
letI Lean.Parser.Tactic.tacticLetI_
lift Mathlib.Tactic.lift
lift_lets Mathlib.Tactic.lift_lets
liftable_prefixes Mathlib.Tactic.Coherence.liftable_prefixes
linarith linarith
linarith! tacticLinarith!_
linear_combination Mathlib.Tactic.LinearCombination.linearCombination
linear_combination2 Mathlib.Tactic.LinearCombination.tacticLinear_combination2____
map_fun_tac WittVector.mapFun.tacticMap_fun_tac
map_tacs Batteries.Tactic.«tacticMap_tacs[_;»]
match Lean.Parser.Tactic.match
match Batteries.Tactic.«tacticMatch_,,With.»
match_target Mathlib.Tactic.tacticMatch_target_
measurability tacticMeasurability_
measurability! measurability!
measurability!? measurability!?
measurability? tacticMeasurability?_
mem_tac AlgebraicGeometry.ProjIsoSpecTopComponent.FromSpec.tacticMem_tac
mem_tac_aux AlgebraicGeometry.ProjIsoSpecTopComponent.FromSpec.tacticMem_tac_aux
mfld_set_tac Tactic.MfldSetTac.mfldSetTac
mod_cases Mathlib.Tactic.ModCases.«tacticMod_cases_:_%_»
monicity Mathlib.Tactic.ComputeDegree.monicityMacro
monicity! Mathlib.Tactic.ComputeDegree.tacticMonicity!
mono Mathlib.Tactic.Monotonicity.mono
monoidal_coherence Mathlib.Tactic.Coherence.tacticMonoidal_coherence
monoidal_nf tacticMonoidal_nf
monoidal_simps Mathlib.Tactic.Coherence.monoidal_simps
move_add Mathlib.MoveAdd.tacticMove_add_
move_mul Mathlib.MoveAdd.tacticMove_mul_
move_oper Mathlib.MoveAdd.moveOperTac
mv_bisim Mathlib.Tactic.MvBisim.tacticMv_bisim___With___
native_decide Lean.Parser.Tactic.nativeDecide
next Lean.Parser.Tactic.«tacticNext_=>_»
nlinarith nlinarith
nlinarith! tacticNlinarith!_
nofun Lean.Parser.Tactic.tacticNofun
nomatch Lean.Parser.Tactic.«tacticNomatch_,,»
noncomm_ring Mathlib.Tactic.NoncommRing.noncomm_ring
nontriviality Mathlib.Tactic.Nontriviality.nontriviality
norm_cast Lean.Parser.Tactic.tacticNorm_cast_
norm_cast0 Lean.Parser.Tactic.normCast0
norm_num Mathlib.Tactic.normNum
norm_num1 Mathlib.Tactic.normNum1
nth_rewrite Mathlib.Tactic.nthRewriteSeq
nth_rw Mathlib.Tactic.nthRwSeq
observe Mathlib.Tactic.LibrarySearch.observe
observe? Mathlib.Tactic.LibrarySearch.«tacticObserve?__:_Using__,,»
observe? Mathlib.Tactic.LibrarySearch.«tacticObserve?__:_»
obtain Lean.Parser.Tactic.obtain
omega Lean.Parser.Tactic.omega
on_goal Batteries.Tactic.«tacticOn_goal-_=>_»
open Lean.Parser.Tactic.open
peel Mathlib.Tactic.Peel.peel
pgame_wf_tac SetTheory.PGame.tacticPgame_wf_tac
pi_lower_bound Real.«tacticPi_lower_bound[_,,»]
pi_upper_bound Real.«tacticPi_upper_bound[_,,»]
pick_goal Batteries.Tactic.«tacticPick_goal-_»
polyrith Mathlib.Tactic.Polyrith.«tacticPolyrithOnly[_»]
positivity Mathlib.Tactic.Positivity.positivity
pure_coherence Mathlib.Tactic.Coherence.pure_coherence
push_cast Lean.Parser.Tactic.pushCast
push_neg Mathlib.Tactic.PushNeg.tacticPush_neg_
qify Mathlib.Tactic.Qify.qify
rcases Lean.Parser.Tactic.rcases
rcongr Batteries.Tactic.rcongr
recover Mathlib.Tactic.tacticRecover_
reduce Mathlib.Tactic.tacticReduce__
reduce_mod_char Tactic.ReduceModChar.reduce_mod_char
reduce_mod_char! Tactic.ReduceModChar.reduce_mod_char!
refine Lean.Parser.Tactic.refine
refine' Lean.Parser.Tactic.refine'
refine_lift Lean.Parser.Tactic.tacticRefine_lift_
refine_lift' Lean.Parser.Tactic.tacticRefine_lift'_
refold_let Mathlib.Tactic.refoldLetStx
rel Mathlib.Tactic.GCongr.«tacticRel[_»]
rename Lean.Parser.Tactic.rename
rename' Mathlib.Tactic.rename'
rename_bvar Mathlib.Tactic.«tacticRename_bvar_→__»
rename_i Lean.Parser.Tactic.renameI
repeat Lean.Parser.Tactic.tacticRepeat_
repeat' Lean.Parser.Tactic.repeat'
repeat1 Mathlib.Tactic.tacticRepeat1_
repeat1' Lean.Parser.Tactic.repeat1'
replace Mathlib.Tactic.replace'
replace Lean.Parser.Tactic.replace
restrict_tac TopCat.Presheaf.restrict_tac
restrict_tac? TopCat.Presheaf.restrict_tac?
revert Lean.Parser.Tactic.revert
rewrite Lean.Parser.Tactic.rewriteSeq
rfl Lean.Parser.Tactic.tacticRfl
rfl' Lean.Parser.Tactic.tacticRfl'
rify Mathlib.Tactic.Rify.rify
right Lean.Parser.Tactic.right
ring Mathlib.Tactic.RingNF.ring
ring! Mathlib.Tactic.RingNF.tacticRing!
ring1 Mathlib.Tactic.Ring.ring1
ring1! Mathlib.Tactic.Ring.tacticRing1!
ring1_nf Mathlib.Tactic.RingNF.ring1NF
ring1_nf! Mathlib.Tactic.RingNF.tacticRing1_nf!_
ring_nf Mathlib.Tactic.RingNF.ringNF
ring_nf! Mathlib.Tactic.RingNF.tacticRing_nf!__
rintro Lean.Parser.Tactic.rintro
rotate_left Lean.Parser.Tactic.rotateLeft
rotate_right Lean.Parser.Tactic.rotateRight
rsuffices rsuffices
run_tac Lean.Parser.Tactic.runTac
rw Lean.Parser.Tactic.rwSeq
rw? Lean.Parser.Tactic.rewrites?
rw_mod_cast Lean.Parser.Tactic.tacticRw_mod_cast___
rw_search Mathlib.Tactic.RewriteSearch.tacticRw_search_
rwa Lean.Parser.Tactic.tacticRwa__
saturate Aesop.Frontend.tacticSaturate_____
saturate? Aesop.Frontend.tacticSaturate?_____
save Lean.Parser.Tactic.save
says Mathlib.Tactic.Says.says
set Mathlib.Tactic.setTactic
set! Mathlib.Tactic.tacticSet!_
set_option Lean.Parser.Tactic.set_option
show Lean.Parser.Tactic.tacticShow_
show_term Lean.Parser.Tactic.showTerm
simp Lean.Parser.Tactic.simp
simp! Lean.Parser.Tactic.simpAutoUnfold
simp? Lean.Parser.Tactic.simpTrace
simp?! Lean.Parser.Tactic.tacticSimp?!_
simp_all Lean.Parser.Tactic.simpAll
simp_all! Lean.Parser.Tactic.simpAllAutoUnfold
simp_all? Lean.Parser.Tactic.simpAllTrace
simp_all?! Lean.Parser.Tactic.tacticSimp_all?!_
simp_all_arith Lean.Parser.Tactic.simpAllArith
simp_all_arith! Lean.Parser.Tactic.simpAllArithAutoUnfold
simp_arith Lean.Parser.Tactic.simpArith
simp_arith! Lean.Parser.Tactic.simpArithAutoUnfold
simp_intro Mathlib.Tactic.«tacticSimp_intro_____..Only_»
simp_rw Mathlib.Tactic.tacticSimp_rw___
simp_wf tacticSimp_wf
simpa Lean.Parser.Tactic.simpa
simpa! Lean.Parser.Tactic.tacticSimpa!_
simpa? Lean.Parser.Tactic.tacticSimpa?_
simpa?! Lean.Parser.Tactic.tacticSimpa?!_
sizeOf_list_dec List.tacticSizeOf_list_dec
skip Lean.Parser.Tactic.skip
sleep Lean.Parser.Tactic.sleep
sleep_heartbeats tacticSleep_heartbeats_
slice_lhs sliceLHS
slice_rhs sliceRHS
slim_check slimCheckSyntax
smul_tac RatFunc.tacticSmul_tac
solve Lean.solveTactic
solve_by_elim Lean.Parser.Tactic.solveByElim
sorry Lean.Parser.Tactic.tacticSorry
sorry_if_sorry CategoryTheory.sorryIfSorry
specialize Lean.Parser.Tactic.specialize
split Lean.Parser.Tactic.split
split_ands Batteries.Tactic.tacticSplit_ands
split_ifs Mathlib.Tactic.splitIfs
squeeze_scope Batteries.Tactic.squeezeScope
stop Lean.Parser.Tactic.tacticStop_
subsingleton Mathlib.Tactic.subsingletonStx
subst Lean.Parser.Tactic.subst
subst_eqs Lean.Parser.Tactic.substEqs
subst_hom_lift CategoryTheory.tacticSubst_hom_lift___
subst_vars Lean.Parser.Tactic.substVars
substs Mathlib.Tactic.Substs.substs
success_if_fail_with_msg Mathlib.Tactic.successIfFailWithMsg
suffices Lean.Parser.Tactic.tacticSuffices_
suffices Mathlib.Tactic.tacticSuffices_
swap Batteries.Tactic.tacticSwap
swap_var Mathlib.Tactic.«tacticSwap_var__,,»
symm Lean.Parser.Tactic.symm
symm_saturate Lean.Parser.Tactic.symmSaturate
tauto Mathlib.Tactic.Tauto.tauto
tfae_finish Mathlib.Tactic.TFAE.tfaeFinish
tfae_have Mathlib.Tactic.TFAE.tfaeHave
toFinite_tac Set.tacticToFinite_tac
to_encard_tac Set.tacticTo_encard_tac
trace Lean.Parser.Tactic.trace
trace Lean.Parser.Tactic.traceMessage
trace_state Lean.Parser.Tactic.traceState
trans Mathlib.Tactic.tacticTrans___
transitivity Mathlib.Tactic.tacticTransitivity___
triv Batteries.Tactic.triv
trivial Lean.Parser.Tactic.tacticTrivial
try Lean.Parser.Tactic.tacticTry_
try_this Mathlib.Tactic.tacticTry_this_
type_check tacticType_check_
unfold Lean.Parser.Tactic.unfold
unfold? Mathlib.Tactic.InteractiveUnfold.tacticUnfold?
unfold_let Mathlib.Tactic.unfoldLetStx
unfold_projs Mathlib.Tactic.unfoldProjsStx
unhygienic Lean.Parser.Tactic.tacticUnhygienic_
uniqueDiffWithinAt_Ici_Iic_univ intervalIntegral.tacticUniqueDiffWithinAt_Ici_Iic_univ
unit_interval Tactic.Interactive.tacticUnit_interval
unreachable! Batteries.Tactic.unreachable
use Mathlib.Tactic.useSyntax
use! Mathlib.Tactic.«tacticUse!___,,»
use_discharger Mathlib.Tactic.tacticUse_discharger
use_finite_instance tacticUse_finite_instance
valid CategoryTheory.ComposableArrows.tacticValid
volume_tac MeasureTheory.tacticVolume_tac
whisker_simps Mathlib.Tactic.BicategoryCoherence.whisker_simps
whnf Mathlib.Tactic.tacticWhnf__
with_panel_widgets ProofWidgets.withPanelWidgetsTacticStx
with_reducible Lean.Parser.Tactic.withReducible
with_reducible_and_instances Lean.Parser.Tactic.withReducibleAndInstances
with_unfolding_all Lean.Parser.Tactic.withUnfoldingAll
witt_truncateFun_tac witt_truncateFun_tac
wlog Mathlib.Tactic.wlog
zify Mathlib.Tactic.Zify.zify
